<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[react]]></title>
    <url>%2F2019%2F03%2F28%2Freact%2F</url>
    <content type="text"><![CDATA[前言推荐一本书籍，这本书通过一个小的demo，一步步实现redux，react-redux。]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>react</tag>
        <tag>redux</tag>
        <tag>react-redux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[es6]]></title>
    <url>%2F2019%2F03%2F19%2Fes6%2F</url>
    <content type="text"><![CDATA[let 代码块内有效 无变量提升 不能重复声明]]></content>
      <tags>
        <tag>ES6</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Html/Css相关]]></title>
    <url>%2F2019%2F03%2F19%2FHtml-Css%E7%9B%B8%E5%85%B3%2F</url>
    <content type="text"><![CDATA[前言关于原生Html/Css相关的，兼容，样式等问题 box-shadowbox-shadow:1px 2px 3px 4px #ccc inset； 以上六个值的含义：1px 从原点开始，沿x轴正方向的长度（倘若为负值，为沿x轴负方向的长度）； 2px 从原点开始，沿y轴正方向的长度；（倘若为负值，为沿y轴负方向的长度）； 3px 阴影的模糊度，只允许为正值； 4px 阴影扩展半径； #ccc 阴影颜色； inset 设置为内阴影（如果不写这个值，默认为外阴影）； 123456789101112131415box-shadow: 0px -10px 0px 0px #ff0000, /*上边阴影 红色*/ -10px 0px 0px 0px #3bee17, /*左边阴影 绿色*/ 10px 0px 0px 0px #2279ee, /*右边阴影 蓝色*/ 0px 10px 0px 0px #eede15; /*下边阴影 黄色*/box-shadow: 0px -10px 0px 0px #ff0000, /*上边阴影 红色*/ -10px 0px 0px 0px #3bee17, /*左边阴影 绿色*/ 10px 0px 0px 0px #2279ee, /*右边阴影 蓝色*/ 0px 10px 0px 0px #eede15; /*下边阴影 黄色*/ IE9以上 input 文本框的X和密码的眼睛图标1234567/* IE9和9以上 input 新增文本框的清空和密码输入框的眼睛显示功能 下面代码不支持IE9*/.login-form ::-ms-clear, .login-form ::-ms-reveal &#123; display: none;&#125; input placeholderFirefox placeholder有一个默认的设置opacity：0.4；所以会出现一个问题，设置为#000的时候，页面上面还是没有改变 12345678910111213141516171819202122232425input::-webkit-input-placeholder,/*chorme, safari*/input:-moz-placeholder, /*Firefox V18及以下*/input::-moz-placeholder, /*Firefox 19*/input:-ms-input-placeholder &#123; /*IE 10*/ color: #000;&#125;input:-moz-placeholder,input::-moz-placeholder &#123; opacity: 1;&#125;/* scss mixin写法 */@mixin placeholder &#123; ::-webkit-input-placeholder &#123;@content&#125; :-moz-placeholder &#123;@content&#125; ::-moz-placeholder &#123;@content&#125; :-ms-input-placeholder &#123;@content&#125; &#125; input &#123; @include placeholder &#123; color: #000; &#125;&#125; 适应手机12345678&lt;meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"&gt; &lt;!-- meta 参数说明 width = device-width：宽度等于当前设备的宽度 height = device-height：高度等于当前设备的高度 initial-scale：初始的缩放比例（默认设置为1.0） minimum-scale：允许用户缩放到的最小比例（默认设置为1.0） maximum-scale：允许用户缩放到的最大比例（默认设置为1.0 user-scalable：用户是否可以手动缩放（默认设置为no，因为我们不希望用户放大缩小页面） --&gt; checkbox 默认样式修改123456789101112131415161718192021222324&lt;input id="color-input-red" class="chat-button-location-radio-input" type="checkbox" name="color-input-red" value="#f0544d" /&gt;&lt;label for="color-input-red"&gt;&lt;/label &gt;/*lable标签的大小、位置、背景颜色更改，在css选择时，“+”代表相邻元素，即当前元素的下一元素*/#color-input-red+label &#123; display: block; width: 20px; height: 20px; cursor: pointer; position: absolute; top: 2px; left: 15px; background: rgba(240, 84, 77, 1);&#125;/*当input框为选中状态时，lable标签的样式，其中在css选择时，“：”表示当前input框的值，即checked； 该部分主要对显示的“对号”的大限居中方式，显示颜色进行了设置*/#color-input-red:checked+label::before &#123; display: block; content: "\2714"; text-align: center; font-size: 16px; color: white;&#125; input光标在IE中是没有办法让input的光标改变颜色的，颜色始终与背景颜色相反。 在Firefox和Chrome中，可以设置color: red来设置光标的颜色。也可以使用caret-color: red。 光标的宽度为1px。]]></content>
      <tags>
        <tag>Html/Css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F03%2F19%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
  <entry>
    <title><![CDATA[PostgreSQL配置文件详解]]></title>
    <url>%2F2019%2F02%2F15%2FPostgreSQL%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[PostgreSQL11配置详解 配置文件位置12345678910111213postgres=# select name, setting from pg_settings where category='File Locations' ; name | setting -------------------+---------------------------------------- config_file | /var/lib/pgsql/11/data/postgresql.conf data_directory | /var/lib/pgsql/11/data external_pid_file | hba_file | /var/lib/pgsql/11/data/pg_hba.conf ident_file | /var/lib/pgsql/11/data/pg_ident.conf(5 rows)//使用root权限查找[root@api data]# find / -name pg_hba.conf/var/lib/pgsql/11/data/pg_hba.conf postgresql.conf​ 该文件包含一些通用设置，比如内存分配，新建database的默认存储位置，PostgreSQL服务器的IP地址，日志的位置以及许多其他设置。onnection Settings -#listen_addresses = 'localhost' #默认只允许本地访问，*为所有人访问#port = 5432max_connections = 100 #确定到数据库服务器的最大并发连接数。 缺省值通常为100个连接，但如果您的内核设置不支持它（在initdb期间确定），则可能会更少。运行备用服务器（即为从库）时，必须将此参数设置为与主服务器上相同或更高的值。 否则，查询将不被允许在备用服务器中#superuser_reserved_connections = 3 #确定为PostgreSQL超级用户连接保留的连接“插槽”的数量。 最多max_connections连接可以同时活动。 只要活动并发连接的数量至少为max_connections minus superuser_reserved_connections，新连接将仅被超级用户接受，并且不会接受新的复制连接。默认值是三个连接。该值必须小于max_connections的值。#unix_socket_directories = '/var/run/postgresql, /tmp' # comma-separated list of directories # (change requires restart)#unix_socket_group = '' # (change requires restart)#unix_socket_permissions = 0777 # begin with 0 to use octal notation # (change requires restart)#bonjour = off # advertise server via Bonjour # (change requires restart)#bonjour_name = '' # defaults to the computer name # (change requires restart)# - TCP Keepalives -# see "man 7 tcp" for details#tcp_keepalives_idle = 0 # TCP_KEEPIDLE, in seconds; # 0 selects the system default#tcp_keepalives_interval = 0 # TCP_KEEPINTVL, in seconds; # 0 selects the system default#tcp_keepalives_count = 0 # TCP_KEEPCNT; # 0 selects the system default# - Authentication -#authentication_timeout = 1min # 1s-600s#password_encryption = md5 # md5 or scram-sha-256#db_user_namespace = off# GSSAPI using Kerberos#krb_server_keyfile = ''#krb_caseins_users = off# - SSL -#ssl = off#ssl_ca_file = ''#ssl_cert_file = 'server.crt'#ssl_crl_file = ''#ssl_key_file = 'server.key'#ssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL' # allowed SSL ciphers#ssl_prefer_server_ciphers = on#ssl_ecdh_curve = 'prime256v1'#ssl_dh_params_file = ''#ssl_passphrase_command = ''#ssl_passphrase_command_supports_reload = off#------------------------------------------------------------------------------# RESOURCE USAGE (except WAL)#------------------------------------------------------------------------------# - Memory -shared_buffers = 128MB # min 128kB # (change requires restart)#huge_pages = try # on, off, or try # (change requires restart)#temp_buffers = 8MB # min 800kB#max_prepared_transactions = 0 # zero disables the feature # (change requires restart)# Caution: it is not advisable to set max_prepared_transactions nonzero unless# you actively intend to use prepared transactions.#work_mem = 4MB # min 64kB#maintenance_work_mem = 64MB # min 1MB#autovacuum_work_mem = -1 # min 1MB, or -1 to use maintenance_work_mem#max_stack_depth = 2MB # min 100kBdynamic_shared_memory_type = posix # the default is the first option # supported by the operating system: # posix # sysv # windows # mmap # use none to disable dynamic shared memory # (change requires restart)# - Disk -#temp_file_limit = -1 # limits per-process temp file space # in kB, or -1 for no limit# - Kernel Resources -#max_files_per_process = 1000 # min 25 # (change requires restart)# - Cost-Based Vacuum Delay -#vacuum_cost_delay = 0 # 0-100 milliseconds#vacuum_cost_page_hit = 1 # 0-10000 credits#vacuum_cost_page_miss = 10 # 0-10000 credits#vacuum_cost_page_dirty = 20 # 0-10000 credits#vacuum_cost_limit = 200 # 1-10000 credits# - Background Writer -#bgwriter_delay = 200ms # 10-10000ms between rounds#bgwriter_lru_maxpages = 100 # max buffers written/round, 0 disables#bgwriter_lru_multiplier = 2.0 # 0-10.0 multiplier on buffers scanned/round#bgwriter_flush_after = 512kB # measured in pages, 0 disables# - Asynchronous Behavior -#effective_io_concurrency = 1 # 1-1000; 0 disables prefetching#max_worker_processes = 8 # (change requires restart)#max_parallel_maintenance_workers = 2 # taken from max_parallel_workers#max_parallel_workers_per_gather = 2 # taken from max_parallel_workers#parallel_leader_participation = on#max_parallel_workers = 8 # maximum number of max_worker_processes that # can be used in parallel operations#old_snapshot_threshold = -1 # 1min-60d; -1 disables; 0 is immediate # (change requires restart)#backend_flush_after = 0 # measured in pages, 0 disables#------------------------------------------------------------------------------# WRITE-AHEAD LOG#------------------------------------------------------------------------------# - Settings -#wal_level = replica # minimal, replica, or logical # (change requires restart)#fsync = on # flush data to disk for crash safety # (turning this off can cause # unrecoverable data corruption)#synchronous_commit = on # synchronization level; # off, local, remote_write, remote_apply, or on#wal_sync_method = fsync # the default is the first option # supported by the operating system: # open_datasync # fdatasync (default on Linux) # fsync # fsync_writethrough # open_sync#full_page_writes = on # recover from partial page writes#wal_compression = off # enable compression of full-page writes#wal_log_hints = off # also do full page writes of non-critical updates # (change requires restart)#wal_buffers = -1 # min 32kB, -1 sets based on shared_buffers # (change requires restart)#wal_writer_delay = 200ms # 1-10000 milliseconds#wal_writer_flush_after = 1MB # measured in pages, 0 disables#commit_delay = 0 # range 0-100000, in microseconds#commit_siblings = 5 # range 1-1000# - Checkpoints -#checkpoint_timeout = 5min # range 30s-1dmax_wal_size = 1GBmin_wal_size = 80MB#checkpoint_completion_target = 0.5 # checkpoint target duration, 0.0 - 1.0#checkpoint_flush_after = 256kB # measured in pages, 0 disables#checkpoint_warning = 30s # 0 disables# - Archiving -#archive_mode = off # enables archiving; off, on, or always # (change requires restart)#archive_command = '' # command to use to archive a logfile segment # placeholders: %p = path of file to archive # %f = file name only # e.g. 'test ! -f /mnt/server/archivedir/%f &amp;&amp; cp %p /mnt/server/archivedir/%f'#archive_timeout = 0 # force a logfile segment switch after this # number of seconds; 0 disables#------------------------------------------------------------------------------# REPLICATION#------------------------------------------------------------------------------# - Sending Servers -# Set these on the master and on any standby that will send replication data.#max_wal_senders = 10 # max number of walsender processes # (change requires restart)#wal_keep_segments = 0 # in logfile segments; 0 disables#wal_sender_timeout = 60s # in milliseconds; 0 disables#max_replication_slots = 10 # max number of replication slots # (change requires restart)#track_commit_timestamp = off # collect timestamp of transaction commit # (change requires restart)# - Master Server -# These settings are ignored on a standby server.#synchronous_standby_names = '' # standby servers that provide sync rep # method to choose sync standbys, number of sync standbys, # and comma-separated list of application_name # from standby(s); '*' = all#vacuum_defer_cleanup_age = 0 # number of xacts by which cleanup is delayed# - Standby Servers -# These settings are ignored on a master server.#hot_standby = on # "off" disallows queries during recovery # (change requires restart)#max_standby_archive_delay = 30s # max delay before canceling queries # when reading WAL from archive; # -1 allows indefinite delay#max_standby_streaming_delay = 30s # max delay before canceling queries # when reading streaming WAL; # -1 allows indefinite delay#wal_receiver_status_interval = 10s # send replies at least this often # 0 disables#hot_standby_feedback = off # send info from standby to prevent # query conflicts#wal_receiver_timeout = 60s # time that receiver waits for # communication from master # in milliseconds; 0 disables#wal_retrieve_retry_interval = 5s # time to wait before retrying to # retrieve WAL after a failed attempt# - Subscribers -# These settings are ignored on a publisher.#max_logical_replication_workers = 4 # taken from max_worker_processes # (change requires restart)#max_sync_workers_per_subscription = 2 # taken from max_logical_replication_workers#------------------------------------------------------------------------------# QUERY TUNING#------------------------------------------------------------------------------# - Planner Method Configuration -#enable_bitmapscan = on#enable_hashagg = on#enable_hashjoin = on#enable_indexscan = on#enable_indexonlyscan = on#enable_material = on#enable_mergejoin = on#enable_nestloop = on#enable_parallel_append = on#enable_seqscan = on#enable_sort = on#enable_tidscan = on#enable_partitionwise_join = off#enable_partitionwise_aggregate = off#enable_parallel_hash = on#enable_partition_pruning = on# - Planner Cost Constants -#seq_page_cost = 1.0 # measured on an arbitrary scale#random_page_cost = 4.0 # same scale as above#cpu_tuple_cost = 0.01 # same scale as above#cpu_index_tuple_cost = 0.005 # same scale as above#cpu_operator_cost = 0.0025 # same scale as above#parallel_tuple_cost = 0.1 # same scale as above#parallel_setup_cost = 1000.0 # same scale as above#jit_above_cost = 100000 # perform JIT compilation if available # and query more expensive than this; # -1 disables#jit_inline_above_cost = 500000 # inline small functions if query is # more expensive than this; -1 disables#jit_optimize_above_cost = 500000 # use expensive JIT optimizations if # query is more expensive than this; # -1 disables#min_parallel_table_scan_size = 8MB#min_parallel_index_scan_size = 512kB#effective_cache_size = 4GB# - Genetic Query Optimizer -#geqo = on#geqo_threshold = 12#geqo_effort = 5 # range 1-10#geqo_pool_size = 0 # selects default based on effort#geqo_generations = 0 # selects default based on effort#geqo_selection_bias = 2.0 # range 1.5-2.0#geqo_seed = 0.0 # range 0.0-1.0# - Other Planner Options -#default_statistics_target = 100 # range 1-10000#constraint_exclusion = partition # on, off, or partition#cursor_tuple_fraction = 0.1 # range 0.0-1.0#from_collapse_limit = 8#join_collapse_limit = 8 # 1 disables collapsing of explicit # JOIN clauses#force_parallel_mode = off#jit = off # allow JIT compilation#------------------------------------------------------------------------------# REPORTING AND LOGGING#------------------------------------------------------------------------------# - Where to Log -log_destination = 'stderr' # Valid values are combinations of # stderr, csvlog, syslog, and eventlog, # depending on platform. csvlog # requires logging_collector to be on.# This is used when logging to stderr:logging_collector = on # Enable capturing of stderr and csvlog # into log files. Required to be on for # csvlogs. # (change requires restart)# These are only used if logging_collector is on:log_directory = 'log' # directory where log files are written, # can be absolute or relative to PGDATAlog_filename = 'postgresql-%a.log' # log file name pattern, # can include strftime() escapes#log_file_mode = 0600 # creation mode for log files, # begin with 0 to use octal notationlog_truncate_on_rotation = on # If on, an existing log file with the # same name as the new log file will be # truncated rather than appended to. # But such truncation only occurs on # time-driven rotation, not on restarts # or size-driven rotation. Default is # off, meaning append to existing files # in all cases.log_rotation_age = 1d # Automatic rotation of logfiles will # happen after that time. 0 disables.log_rotation_size = 0 # Automatic rotation of logfiles will # happen after that much log output. # 0 disables.# These are relevant when logging to syslog:#syslog_facility = 'LOCAL0'#syslog_ident = 'postgres'#syslog_sequence_numbers = on#syslog_split_messages = on# This is only relevant when logging to eventlog (win32):# (change requires restart)#event_source = 'PostgreSQL'# - When to Log -#client_min_messages = notice # values in order of decreasing detail: # debug5 # debug4 # debug3 # debug2 # debug1 # log # notice # warning # error#log_min_messages = warning # values in order of decreasing detail: # debug5 # debug4 # debug3 # debug2 # debug1 # info # notice # warning # error # log # fatal # panic#log_min_error_statement = error # values in order of decreasing detail: # debug5 # debug4 # debug3 # debug2 # debug1 # info # notice # warning # error # log # fatal # panic (effectively off)#log_min_duration_statement = -1 # -1 is disabled, 0 logs all statements # and their durations, &gt; 0 logs only # statements running at least this number # of milliseconds# - What to Log -#debug_print_parse = off#debug_print_rewritten = off#debug_print_plan = off#debug_pretty_print = on#log_checkpoints = off#log_connections = off#log_disconnections = off#log_duration = off#log_error_verbosity = default # terse, default, or verbose messages#log_hostname = offlog_line_prefix = '%m [%p] ' # special values: # %a = application name # %u = user name # %d = database name # %r = remote host and port # %h = remote host # %p = process ID # %t = timestamp without milliseconds # %m = timestamp with milliseconds # %n = timestamp with milliseconds (as a Unix epoch) # %i = command tag # %e = SQL state # %c = session ID # %l = session line number # %s = session start timestamp # %v = virtual transaction ID # %x = transaction ID (0 if none) # %q = stop here in non-session # processes # %% = '%' # e.g. '&lt;%u%%%d&gt; '#log_lock_waits = off # log lock waits &gt;= deadlock_timeout#log_statement = 'none' # none, ddl, mod, all#log_replication_commands = off#log_temp_files = -1 # log temporary files equal or larger # than the specified size in kilobytes; # -1 disables, 0 logs all temp fileslog_timezone = 'UTC'#------------------------------------------------------------------------------# PROCESS TITLE#------------------------------------------------------------------------------#cluster_name = '' # added to process titles if nonempty # (change requires restart)#update_process_title = on#------------------------------------------------------------------------------# STATISTICS#------------------------------------------------------------------------------# - Query and Index Statistics Collector -#track_activities = on#track_counts = on#track_io_timing = off#track_functions = none # none, pl, all#track_activity_query_size = 1024 # (change requires restart)#stats_temp_directory = 'pg_stat_tmp'# - Monitoring -#log_parser_stats = off#log_planner_stats = off#log_executor_stats = off#log_statement_stats = off#------------------------------------------------------------------------------# AUTOVACUUM#------------------------------------------------------------------------------#autovacuum = on # Enable autovacuum subprocess? 'on' # requires track_counts to also be on.#log_autovacuum_min_duration = -1 # -1 disables, 0 logs all actions and # their durations, &gt; 0 logs only # actions running at least this number # of milliseconds.#autovacuum_max_workers = 3 # max number of autovacuum subprocesses # (change requires restart)#autovacuum_naptime = 1min # time between autovacuum runs#autovacuum_vacuum_threshold = 50 # min number of row updates before # vacuum#autovacuum_analyze_threshold = 50 # min number of row updates before # analyze#autovacuum_vacuum_scale_factor = 0.2 # fraction of table size before vacuum#autovacuum_analyze_scale_factor = 0.1 # fraction of table size before analyze#autovacuum_freeze_max_age = 200000000 # maximum XID age before forced vacuum # (change requires restart)#autovacuum_multixact_freeze_max_age = 400000000 # maximum multixact age # before forced vacuum # (change requires restart)#autovacuum_vacuum_cost_delay = 20ms # default vacuum cost delay for # autovacuum, in milliseconds; # -1 means use vacuum_cost_delay#autovacuum_vacuum_cost_limit = -1 # default vacuum cost limit for # autovacuum, -1 means use # vacuum_cost_limit#------------------------------------------------------------------------------# CLIENT CONNECTION DEFAULTS#------------------------------------------------------------------------------# - Statement Behavior -#search_path = '"$user", public' # schema names#row_security = on#default_tablespace = '' # a tablespace name, '' uses the default#temp_tablespaces = '' # a list of tablespace names, '' uses # only default tablespace#check_function_bodies = on#default_transaction_isolation = 'read committed'#default_transaction_read_only = off#default_transaction_deferrable = off#session_replication_role = 'origin'#statement_timeout = 0 # in milliseconds, 0 is disabled#lock_timeout = 0 # in milliseconds, 0 is disabled#idle_in_transaction_session_timeout = 0 # in milliseconds, 0 is disabled#vacuum_freeze_min_age = 50000000#vacuum_freeze_table_age = 150000000#vacuum_multixact_freeze_min_age = 5000000#vacuum_multixact_freeze_table_age = 150000000#vacuum_cleanup_index_scale_factor = 0.1 # fraction of total number of tuples # before index cleanup, 0 always performs # index cleanup#bytea_output = 'hex' # hex, escape#xmlbinary = 'base64'#xmloption = 'content'#gin_fuzzy_search_limit = 0#gin_pending_list_limit = 4MB# - Locale and Formatting -datestyle = 'iso, mdy'#intervalstyle = 'postgres'timezone = 'UTC'#timezone_abbreviations = 'Default' # Select the set of available time zone # abbreviations. Currently, there are # Default # Australia (historical usage) # India # You can create your own file in # share/timezonesets/.#extra_float_digits = 0 # min -15, max 3#client_encoding = sql_ascii # actually, defaults to database # encoding# These settings are initialized by initdb, but they can be changed.lc_messages = 'en_US.UTF-8' # locale for system error message # stringslc_monetary = 'en_US.UTF-8' # locale for monetary formattinglc_numeric = 'en_US.UTF-8' # locale for number formattinglc_time = 'en_US.UTF-8' # locale for time formatting# default configuration for text searchdefault_text_search_config = 'pg_catalog.english'# - Shared Library Preloading -#shared_preload_libraries = '' # (change requires restart)#local_preload_libraries = ''#session_preload_libraries = ''#jit_provider = 'llvmjit' # JIT library to use# - Other Defaults -#dynamic_library_path = '$libdir'#------------------------------------------------------------------------------# LOCK MANAGEMENT#------------------------------------------------------------------------------#deadlock_timeout = 1s#max_locks_per_transaction = 64 # min 10 # (change requires restart)#max_pred_locks_per_transaction = 64 # min 10 # (change requires restart)#max_pred_locks_per_relation = -2 # negative values mean # (max_pred_locks_per_transaction # / -max_pred_locks_per_relation) - 1#max_pred_locks_per_page = 2 # min 0#------------------------------------------------------------------------------# VERSION AND PLATFORM COMPATIBILITY#------------------------------------------------------------------------------# - Previous PostgreSQL Versions -#array_nulls = on#backslash_quote = safe_encoding # on, off, or safe_encoding#default_with_oids = off#escape_string_warning = on#lo_compat_privileges = off#operator_precedence_warning = off#quote_all_identifiers = off#standard_conforming_strings = on#synchronize_seqscans = on# - Other Platforms and Clients -#transform_null_equals = off#------------------------------------------------------------------------------# ERROR HANDLING#------------------------------------------------------------------------------#exit_on_error = off # terminate session on any error?#restart_after_crash = on # reinitialize after backend crash?#------------------------------------------------------------------------------# CONFIG FILE INCLUDES#------------------------------------------------------------------------------# These options allow settings to be loaded from files other than the# default postgresql.conf.#include_dir = 'conf.d' # include files ending in '.conf' from # directory 'conf.d'#include_if_exists = 'exists.conf' # include file only if it exists#include = 'special.conf' # include file#------------------------------------------------------------------------------# CUSTOMIZED OPTIONS#------------------------------------------------------------------------------# Add settings for extensions here pg_hba.conf​ 客户端认证配置文件，允许哪些用户连接到哪个数据库，允许哪些IP或者哪个网段的IP连接到本服务器，以及指定连接时使用的身份验证模式 pg_hba.conf 客户端认证配置文件的认证类型包括: trust 本地可以使用 psql -U postgres 直接登录服务器； (生产环境勿用) peer 本地可以使用 psql -h 127.0.0.1 -d postgres -U postgres直接登录服务器; (peer使用发起端的操作系统名进行身份验证) password 使用 用户名密码(明文密码) 登录 ； (生产环境勿用) ident ​ ident是Linux下PostgreSQL默认的local认证方式，凡是能正确登录服务器的操作系统用户（注：不是数据库用户）就能使用本用户映射的数据库用户不需密码登录数据库。 md5 md5是常用的密码认证方式，如果你不使用ident，最好使用md5。密码是以md5形式传送给数据库，较安全，且不需建立同名的操作系统用户 reject 拒绝认证建议使用md5方式,不同用户相同密码加密的结果也不相同,因为会使用用户名和密码一同加密. 所以要注意:若已设密码的用户名称改变了,密码也会失效… Ident和peer模式适用于Linux，Unix和Mac,不适用于windwos pg_ident.conf​ 用户映射文件，若客户端使用ident类型认证,就需要这里的映射关系了.比如，服务器上有名为user1的操作系统用户，同时数据库上也有同名的数据库用户，user1登录操作系统后可以直接输入psql，以user1数据库用户身份登录数据库且不需密码。很多初学者都会遇到psql -U username登录数据库却出现“username ident 认证失败”的错误，明明数据库用户已经createuser。原因就在于此，使用了ident认证方式，却没有同名的操作系统用户或没有相应的映射用户。解决方案：1、在pg_ident.conf中添加映射用户；2、改变认证方式。 CentOS7安装了PostgreSQL10和pgadmin4后,pgadmin4始终登陆数据库提示用户认证失败,就是因为Linux下PostgreSQL默认的local认证方式是ident,而pg_ident.cong用户映射文件里并没有任何映射用户,所以可以修改认证方式为md5,即可使用密码成功登陆了. 参考文档 https://www.cnblogs.com/sztom/p/9534323.html]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>PostgreSQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux]]></title>
    <url>%2F2019%2F02%2F12%2FLinux%2F</url>
    <content type="text"><![CDATA[1234[root@10 ~]# cat /etc/redhat-releaseCentOS Linux release 7.2.1511 (Core)[root@10 ~]# uname -aLinux 10.16.93.179 3.10.0-327.10.1.el7.x86_64 #1 SMP Tue Feb 16 17:03:50 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PostgreSQL]]></title>
    <url>%2F2019%2F02%2F11%2Fpostgresql%2F</url>
    <content type="text"><![CDATA[Centos 7安装PostgreSQL官方安装说明 参考博客Centos 7 安装 PostgreSQL 安装存储库 1yum install https://download.postgresql.org/pub/repos/yum/11/redhat/rhel-7-x86_64/pgdg-centos11-11-2.noarch.rpm 安装客户端 1yum install postgresql11 安装服务端 1yum install postgresql11-server 验证是否安装成功 1rpm -aq| grep postgres 初始化数据库 1/usr/pgsql-11/bin/postgresql-11-setup initdb 开机自动启动 12systemctl enable postgresql-11systemctl start postgresql-11 修改密码postgresql安装完成后，会在系统中创建默认用户postgres，没有默认密码。 登录 12su postgres //切换用户，执行后提示符会变为 '-bash-4.2$'psql postgres //登录数据库，执行后提示符变为 'postgres=#' psql -U postgres -p 8998 创建密码 1234postgres=# \password postgres #给postgres用户设置密码 Enter new password: #输入用户密码Enter it again: #再次输入密码\q //退出数据库 开启远程访问 123vim /var/lib/pgsql/11/data/postgresql.conf修改#listen_addresses = 'localhost' 为 listen_addresses = '*'当然，此处‘*’也可以改为任何你想开放的服务器IP 信任连接 12345vim /var/lib/pgsql/11/data/pg_hba.conf# IPv4 local connections:host all all 127.0.0.1/32 ident允许所有ip通过密码连接host all all 0.0.0.0/0 md5 配置防火墙 123firewall-cmd --permanent --add-port=5432/tcp firewall-cmd --permanent --add-port=80/tcp firewall-cmd --reload 最后确保端口5432可以在外部访问到，比如，需要开通阿里云服务器暴露的端口。 重启服务 1systemctl restart postgresql-11 使用navicat连接数据库 Docker安装PostgreSQL12docker pull postgresdocker run --name postgres01 -e POSTGRES_PASSWORD=postgres -p 5432:5432 -d --restart=always postgres 备份与恢复1234567pg_basebackup -F p -D /var/lib/pgsql/11/backups -v -h 40.73.35.55 -p 8998 -U postgres -WPassword:pg_basebackup -R -D /var/lib/pgsql/11/data -h 40.73.35.55 -p 8998 -U postgres -w-R 选项可以自动生成recovery.conf文件pg_basebackup -h 40.73.35.55 -p 8998 -U postgres -w -D /var/lib/pgsql/11/data -X stream -P postgresql 高可用集群搭建资料 PostgresSQL HA高可用架构实战 HA 方案 1. 共享存储 2. drbd 3. 基于流复制 流复制 异步流复制 ​ 异步流复制的中心思想是：主库上提交事务时不需要等待备库接收WAL日志流并写入到备库WAL日志文件时便返回成功，因此异步流复制的TPS会相对同步流复制要高，延迟更低。 参考博客 1. https://www.cnblogs.com/sunshine-long/p/9059695.html 2. https://lihaoquan.me/2018/9/29/postgresql-master-slave-ha.html 验证是否部署成功 12345678910111213141516171819202122su - postgrespsql -U postgres -p 8998//主服务器postgres=# select pg_is_in_recovery();pg_is_in_recovery-------------------f //f表示主(1 row)//备服务器postgres=# select pg_is_in_recovery();pg_is_in_recovery-------------------t //t表示备(1 row)//主服务器，async表示异步流复制postgres=# select client_addr,application_name,sync_state from pg_stat_replication;client_addr | sync_state ---------------+------------139.219.6.177 | async(1 row) 同步流复制 事务同步 只需修改master 123456789vim postgresql.confsynchronous_standby_names = '*'synchronous_commit = onpostgres=# select client_addr,application_name,sync_state from pg_stat_replication; client_addr | application_name | sync_state ---------------+------------------+------------ 139.219.6.177 | walreceiver | sync(1 row)]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>PostgreSQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Docker]]></title>
    <url>%2F2019%2F02%2F11%2Fdocker%E7%9B%B8%E5%85%B3%2F</url>
    <content type="text"><![CDATA[1. Centos7安装docker 1234567891011121314151617181920212223yum install dockersystemctl start dockersystemctl enable docker //开机启动systemctl stop docker[root@rd-test /]# docker versionClient: Version: 1.13.1 API version: 1.26 Package version: docker-1.13.1-88.git07f3374.el7.centos.x86_64 Go version: go1.9.4 Git commit: 07f3374/1.13.1 Built: Fri Dec 7 16:13:51 2018 OS/Arch: linux/amd64Server: Version: 1.13.1 API version: 1.26 (minimum version 1.12) Package version: docker-1.13.1-88.git07f3374.el7.centos.x86_64 Go version: go1.9.4 Git commit: 07f3374/1.13.1 Built: Fri Dec 7 16:13:51 2018 OS/Arch: linux/amd64 Experimental: false]]></content>
      <categories>
        <category>服务器</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[站点配置更新]]></title>
    <url>%2F2019%2F01%2F30%2Fhexo%E9%85%8D%E7%BD%AE%E6%9B%B4%E6%96%B0%2F</url>
    <content type="text"><![CDATA[前言本文转自 https://www.donlex.cn/archives/undefined.html 最近更新了一下站点的一些配置，让网站的趣味性有了一定的提升。主要做了一下几点更新。 添加雪花效果 添加天气插件 加入CNZZ统计 下面将详细分享一下过程经历！ 添加雪花效果实现方法：在 \themes\next\source\js\src 目录下新建一个 snow.js 文件，复制粘贴一下代码。 其中样式一是六边形的雪片，样式二是小圆点的雪花，其自行调试，选择喜欢的样式。 样式一123456789101112131415161718192021222324252627282930313233343536373839404142/*样式一*/(function($)&#123; $.fn.snow = function(options)&#123; var $flake = $(&apos;&lt;div id=&quot;snowbox&quot; /&gt;&apos;).css(&#123;&apos;position&apos;: &apos;absolute&apos;,&apos;z-index&apos;:&apos;9999&apos;, &apos;top&apos;: &apos;-50px&apos;&#125;).html(&apos;&amp;#10052;&apos;), documentHeight = $(document).height(), documentWidth = $(document).width(), defaults = &#123; minSize : 10, maxSize : 20, newOn : 1000, flakeColor : &quot;#AFDAEF&quot; /* 此处可以定义雪花颜色，若要白色可以改为#FFFFFF */ &#125;, options = $.extend(&#123;&#125;, defaults, options); var interval= setInterval( function()&#123; var startPositionLeft = Math.random() * documentWidth - 100, startOpacity = 0.5 + Math.random(), sizeFlake = options.minSize + Math.random() * options.maxSize, endPositionTop = documentHeight - 200, endPositionLeft = startPositionLeft - 500 + Math.random() * 500, durationFall = documentHeight * 10 + Math.random() * 5000; $flake.clone().appendTo(&apos;body&apos;).css(&#123; left: startPositionLeft, opacity: startOpacity, &apos;font-size&apos;: sizeFlake, color: options.flakeColor &#125;).animate(&#123; top: endPositionTop, left: endPositionLeft, opacity: 0.2 &#125;,durationFall,&apos;linear&apos;,function()&#123; $(this).remove() &#125;); &#125;, options.newOn); &#125;;&#125;)(jQuery);$(function()&#123; $.fn.snow(&#123; minSize: 5, /* 定义雪花最小尺寸 */ maxSize: 50,/* 定义雪花最大尺寸 */ newOn: 300 /* 定义密集程度，数字越小越密集 */ &#125;);&#125;); 样式二123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128/*样式二*//* 控制下雪 */function snowFall(snow) &#123; /* 可配置属性 */ snow = snow || &#123;&#125;; this.maxFlake = snow.maxFlake || 200; /* 最多片数 */ this.flakeSize = snow.flakeSize || 10; /* 雪花形状 */ this.fallSpeed = snow.fallSpeed || 1; /* 坠落速度 */&#125;/* 兼容写法 */requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame || function(callback) &#123; setTimeout(callback, 1000 / 60); &#125;;cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame || window.oCancelAnimationFrame;/* 开始下雪 */snowFall.prototype.start = function()&#123; /* 创建画布 */ snowCanvas.apply(this); /* 创建雪花形状 */ createFlakes.apply(this); /* 画雪 */ drawSnow.apply(this)&#125;/* 创建画布 */function snowCanvas() &#123; /* 添加Dom结点 */ var snowcanvas = document.createElement(&quot;canvas&quot;); snowcanvas.id = &quot;snowfall&quot;; snowcanvas.width = window.innerWidth; snowcanvas.height = document.body.clientHeight; snowcanvas.setAttribute(&quot;style&quot;, &quot;position:absolute; top: 0; left: 0; z-index: 1; pointer-events: none;&quot;); document.getElementsByTagName(&quot;body&quot;)[0].appendChild(snowcanvas); this.canvas = snowcanvas; this.ctx = snowcanvas.getContext(&quot;2d&quot;); /* 窗口大小改变的处理 */ window.onresize = function() &#123; snowcanvas.width = window.innerWidth; /* snowcanvas.height = window.innerHeight */ &#125;&#125;/* 雪运动对象 */function flakeMove(canvasWidth, canvasHeight, flakeSize, fallSpeed) &#123; this.x = Math.floor(Math.random() * canvasWidth); /* x坐标 */ this.y = Math.floor(Math.random() * canvasHeight); /* y坐标 */ this.size = Math.random() * flakeSize + 2; /* 形状 */ this.maxSize = flakeSize; /* 最大形状 */ this.speed = Math.random() * 1 + fallSpeed; /* 坠落速度 */ this.fallSpeed = fallSpeed; /* 坠落速度 */ this.velY = this.speed; /* Y方向速度 */ this.velX = 0; /* X方向速度 */ this.stepSize = Math.random() / 30; /* 步长 */ this.step = 0 /* 步数 */&#125;flakeMove.prototype.update = function() &#123; var x = this.x, y = this.y; /* 左右摆动(余弦) */ this.velX *= 0.98; if (this.velY &lt;= this.speed) &#123; this.velY = this.speed &#125; this.velX += Math.cos(this.step += .05) * this.stepSize; this.y += this.velY; this.x += this.velX; /* 飞出边界的处理 */ if (this.x &gt;= canvas.width || this.x &lt;= 0 || this.y &gt;= canvas.height || this.y &lt;= 0) &#123; this.reset(canvas.width, canvas.height) &#125;&#125;;/* 飞出边界-放置最顶端继续坠落 */flakeMove.prototype.reset = function(width, height) &#123; this.x = Math.floor(Math.random() * width); this.y = 0; this.size = Math.random() * this.maxSize + 2; this.speed = Math.random() * 1 + this.fallSpeed; this.velY = this.speed; this.velX = 0;&#125;;// 渲染雪花-随机形状（此处可修改雪花颜色！！！）flakeMove.prototype.render = function(ctx) &#123; var snowFlake = ctx.createRadialGradient(this.x, this.y, 0, this.x, this.y, this.size); snowFlake.addColorStop(0, &quot;rgba(255, 255, 255, 0.9)&quot;); /* 此处是雪花颜色，默认是白色 */ snowFlake.addColorStop(.5, &quot;rgba(255, 255, 255, 0.5)&quot;); /* 若要改为其他颜色，请自行查 */ snowFlake.addColorStop(1, &quot;rgba(255, 255, 255, 0)&quot;); /* 找16进制的RGB 颜色代码。 */ ctx.save(); ctx.fillStyle = snowFlake; ctx.beginPath(); ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2); ctx.fill(); ctx.restore();&#125;;/* 创建雪花-定义形状 */function createFlakes() &#123; var maxFlake = this.maxFlake, flakes = this.flakes = [], canvas = this.canvas; for (var i = 0; i &lt; maxFlake; i++) &#123; flakes.push(new flakeMove(canvas.width, canvas.height, this.flakeSize, this.fallSpeed)) &#125;&#125;/* 画雪 */function drawSnow() &#123; var maxFlake = this.maxFlake, flakes = this.flakes; ctx = this.ctx, canvas = this.canvas, that = this; /* 清空雪花 */ ctx.clearRect(0, 0, canvas.width, canvas.height); for (var e = 0; e &lt; maxFlake; e++) &#123; flakes[e].update(); flakes[e].render(ctx); &#125; /* 一帧一帧的画 */ this.loop = requestAnimationFrame(function() &#123; drawSnow.apply(that); &#125;);&#125;/* 调用及控制方法 */var snow = new snowFall(&#123;maxFlake:60&#125;);snow.start(); 然后在 \themes\next\layout\_layout.swig 文件里&lt;body&gt;&lt;/body&gt;内部引用即可： 1234567&lt;!-- 雪花特效 --&gt;&lt;script type=&quot;text/javascript&quot;&gt; var windowWidth = $(window).width(); if (windowWidth &gt; 480) &#123; document.write(&apos;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/snow.js&quot;&gt;&lt;\/script&gt;&apos;); &#125;&lt;/script&gt; 请确保在你添加的代码上面已经引入了JQ，否则你还需要导入jq 1&lt;script type=&quot;text/javascript&quot; src=&quot;//libs.baidu.com/jquery/1.8.3/jquery.min.js&quot;&gt;&lt;/script&gt; 添加天气插件网上有很多的天气插件，找了很久发现心知天气非常不错。获取地址：https://www.seniverse.com/widget/get 使用心知天气有两点必备条件： 注册心知天气账号 博客绑定了域名 如果你没有域名但是可以通过IP地址进行访问也是可以添加成功的。 下面说一下详细的过程： 配置插件有账号之后,登录根据自己喜好配置插件。心知天气的自动适配功能非常的不错。 安装代码选择好配置之后，就可以获取心知的插件代码。获取到代码之后，在\themes\next\layout\_partials\head\custom-head.swig中添加获取的代码。之后就可以部署到Github上了。 吐槽一下，加载数独真的是很慢，特别是在移动端中，如果你希望你的站点访问速度快一点，建议还是不要为了功能，而放弃用户体验。 添加CNZZ统计刚开始弄NexT主题的时候，对一些配置还不是很明白，所以一直都不敢弄。今天总算有点精神，就把友盟的统计给加上了。之前一直都是用不蒜子的统计，但是不蒜子统计的内容太过简单了，不能够看到其他的一些数据。 友盟+ 传送门：https://passport.umeng.com/login?appId=cnzz 配置站点信息登录之后，选择右上角的添加站点，配置好你的站点信息 获取代码获取友盟提供给你的代码，友盟提供了很多的样式，随便复制一份就行。 在\themes\next\layout\_third-party\analytics\cnzz-analytics.swig中将原来的代码全部删除，复制下面的代码：ps：如果没有该文件，请自行创建然后复制修改下面的代码 123456789101112&#123;% if theme.cnzz_siteid %&#125;&lt;div&gt;&lt;!-- 填写你的友盟代码 --&gt;&lt;script type=&quot;text/javascript&quot;&gt; var cnzz_protocol = ((&quot;https:&quot; == document.location.protocol) ? &quot; https://&quot; : &quot; http://&quot;); document.write(unescape(&quot;%3Cspan id=&apos;cnzz_stat_icon_12&apos;%3E%3C/span%3E%3Cscript src=&apos;&quot; + cnzz_protocol + &quot;s19.cnzz.com/z_stat.php%3Fid%3D12%2show%3Dpic&apos; type=&apos;text/javascript&apos;%3E%3C/script%3E&quot;));&lt;/script&gt;&lt;!-- 你的友盟代码 end --&gt;&lt;/div&gt;&#123;% endif %&#125; 修改配置文件添加了代码之后，还需要修改next的配置文件才能够生效。注意是主题配置文件打开\themes\next目录下的_config.yml，按ctrl + F搜索CNZZ,找到之后将注释的内容打开，并设置成true，注意空格 12# CNZZ countcnzz_siteid: true 这样就可以成功的使用CNZZ进行统计了。建议使用hexo s在本地测试，看是否有问题再部署上去。 附赠在我的博客中，部署友盟上去之后，发现移动端的footer顶上去了。哭死: ( 写博客的时候，才发现不蒜子的统计居然变少了，原来不蒜子对域名前加www和不加www的网站是区分统计的。。。算了，反正是佛系博主，随缘吧。。。。 打开\themes\next\source\css\_custom目录下的custom.styl，添加以下代码： 12345678910// Custom styles.//mobile style footer@media (max-width: 767px) .content-wrap &#123; width: 100%; padding: 20px; min-height: auto; margin-bottom: 30px; border-radius: initial; &#125; 注意.content-wrap前面有一个空格，一定要添加，否则博客的样式就全乱了。]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
</search>
